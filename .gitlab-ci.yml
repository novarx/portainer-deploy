stages:
  - build
  - staging
  - publish

default:
  image: node:20
  retry: 2
  before_script:
    - npm ci
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/

cli:build:
  stage: build
  script:
    - npm run build

cli:test:
  stage: build
  script:
    - npm run test
    - curl -Os https://uploader.codecov.io/latest/linux/codecov
    - chmod +x codecov
    - ./codecov -t $CODECOV_TOKEN
  artifacts:
    paths:
      - coverage
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

.with-gitlab-registry:
  before_script:
    - npm ci
    - rm .npmrc
    - echo "@nvax:registry=https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" > .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc

cli:publish:gitlab:
  stage: staging
  extends: .with-gitlab-registry
  script:
    - npm version --no-git-tag-version --no-commit-hooks 99.0.0-$CI_COMMIT_SHORT_SHA
    - npm publish

cli:smoke-test:
  stage: staging
  extends: .with-gitlab-registry
  needs:
    - cli:publish:gitlab
  script:
    - npm i -g @nvax/portainer-deploy@99.0.0-$CI_COMMIT_SHORT_SHA
    - cd ./test/commands/stack/ || exit 1
    - portainer-deploy stack docker-compose.yaml --endpoint=2 --stack=200 || exit 1

cli:publish:npmjs:
  stage: publish
  script:
    - npm config set //registry.npmjs.org/:_authToken ${NPMJS_TOKEN}
    - npm run semantic-release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
